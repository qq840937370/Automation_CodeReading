//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeReading.View.HistoryServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HistoryServiceReference.IHistoryService")]
    public interface IHistoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHistoryService/Initialize", ReplyAction="http://tempuri.org/IHistoryService/InitializeResponse")]
        CodeReading.Entity.History.InitializeResult Initialize(CodeReading.Entity.LoginInfo loginInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHistoryService/Initialize", ReplyAction="http://tempuri.org/IHistoryService/InitializeResponse")]
        System.Threading.Tasks.Task<CodeReading.Entity.History.InitializeResult> InitializeAsync(CodeReading.Entity.LoginInfo loginInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHistoryService/Search", ReplyAction="http://tempuri.org/IHistoryService/SearchResponse")]
        CodeReading.Entity.History.SearchResult Search(CodeReading.Entity.History.SearchConditions searchConditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHistoryService/Search", ReplyAction="http://tempuri.org/IHistoryService/SearchResponse")]
        System.Threading.Tasks.Task<CodeReading.Entity.History.SearchResult> SearchAsync(CodeReading.Entity.History.SearchConditions searchConditions);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHistoryServiceChannel : CodeReading.View.HistoryServiceReference.IHistoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HistoryServiceClient : System.ServiceModel.ClientBase<CodeReading.View.HistoryServiceReference.IHistoryService>, CodeReading.View.HistoryServiceReference.IHistoryService {
        
        public HistoryServiceClient() {
        }
        
        public HistoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HistoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HistoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HistoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CodeReading.Entity.History.InitializeResult Initialize(CodeReading.Entity.LoginInfo loginInfo) {
            return base.Channel.Initialize(loginInfo);
        }
        
        public System.Threading.Tasks.Task<CodeReading.Entity.History.InitializeResult> InitializeAsync(CodeReading.Entity.LoginInfo loginInfo) {
            return base.Channel.InitializeAsync(loginInfo);
        }
        
        public CodeReading.Entity.History.SearchResult Search(CodeReading.Entity.History.SearchConditions searchConditions) {
            return base.Channel.Search(searchConditions);
        }
        
        public System.Threading.Tasks.Task<CodeReading.Entity.History.SearchResult> SearchAsync(CodeReading.Entity.History.SearchConditions searchConditions) {
            return base.Channel.SearchAsync(searchConditions);
        }
    }
}
